{"version":3,"sources":["../../src/blocks/01_Tornado/00_Helpers.js","../../src/blocks/01_Tornado/01_section.js","../../src/blocks/01_Tornado/02_container.js","../../src/blocks/01_Tornado/03_grid_row.js","../../src/blocks/01_Tornado/04_grid_column.js"],"names":[],"mappings":"AAIA,KAAM,CAAC,EAAD,EAAO,EAAE,CAAC,IAAhB,CACA,KAAM,CAAC,iBAAD,EAAsB,EAAE,CAAC,MAA/B,CACA,KAAM,CAAC,cAAD,EAAmB,EAAE,CAAC,OAA5B,CAEA,KAAM,CACF,SADE,CAEF,QAFE,CAGF,QAHE,CAIF,WAJE,CAKF,gBALE,CAMF,gBANE,CAOF,aAPE,CAQF,YARE,CASF,WATE,CAUF,iBAVE,EAWF,EAAE,CAAC,WAXP,CAcA,KAAM,CACF,SADE,CAEF,KAFE,CAGF,SAHE,CAIF,QAJE,CAKF,aALE,CAMF,MANE,CAOF,YAPE,CAQF,WARE,CASF,WATE,CAUF,YAVE,CAWF,cAXE,CAYF,WAZE,EAaF,EAAE,CAAC,UAbP,CAgBA,KAAM,CAAA,gBAAgB,CAAG,EAAE,CAAC,gBAA5B,CAEA,KAAM,CAAC,SAAD,CAAY,QAAZ,EAAwB,EAAE,CAAC,OAAjC,CAEA,KAAM,CAAC,MAAD,CAAS,UAAT,CAAqB,QAArB,EAAiC,EAAE,CAAC,IAA1C,CAEA,KAAM,CAAC,0BAAD,EAA+B,EAAE,CAAC,OAAxC;AC3CA,iBAAiB,CAAE,iBAAF,CAAqB,CAClC,KAAK,CAAE,EAAE,CAAC,SAAD,CAAY,SAAZ,CADyB,CAElC,WAAW,CAAE,EAAE,CAAC,2BAAD,CAA8B,SAA9B,CAFmB,CAGlC,IAAI,CAAC,UAH6B,CAIlC,QAAQ,CAAE,SAJwB,CAKlC,QAAQ,CAAE,CAAE,SAAF,CAAa,WAAb,CAA0B,MAA1B,CAAkC,SAAlC,CALwB,CAMlC,QAAQ,CAAE,CACN,KAAK,CAAE,CAAC,MAAD,CAAQ,MAAR,CADD,CANwB,CASlC,UAAU,CAAE,CACR,YAAY,CAAG,CACX,IAAI,CAAE,QADK,CAEX,OAAO,CAAE,EAFE,CADP,CAKR,QAAQ,CAAG,CACP,IAAI,CAAE,QADC,CAEP,OAAO,CAAE,EAFF,CALH,CATsB,CAoBlC,IAAI,CAAE,KAAK,EAAI,CAEX,KAAM,CAAE,UAAF,CAAc,aAAd,CAA6B,UAA7B,EAA4C,KAAlD,CACA,KAAK,CAAC,aAAN,CAAqB,CAAE,KAAK,CAAE,MAAT,CAArB,EAEA,KAAM,CAAA,gBAAgB,CAAG,KAAK,EAAI,KAAK,CAAC,aAAN,CAAoB,CAAE,YAAY,CAAE,KAAhB,CAApB,CAAlC,CACA,KAAM,CAAA,YAAY,CAAG,KAAK,EAAI,aAAa,CAAC,CAAE,QAAQ,CAAE,KAAZ,CAAD,CAA3C,CAEA,MACI,qBAAC,KAAD,MACI,oBAAC,SAAD,MAEI,oBAAC,iBAAD,EAAmB,GAAG,CAAC,WAAvB,EACI,oBAAC,SAAD,EAAW,KAAK,CAAG,EAAE,CAAC,eAAD,CAAkB,SAAlB,CAArB,EAEI,oBAAC,WAAD,EAAa,GAAG,CAAC,UAAjB,CAA4B,KAAK,CAAG,EAAE,CAAC,QAAD,CAAW,SAAX,CAAtC,CAA8D,KAAK,CAAG,UAAU,CAAC,QAAjF,CAA4F,QAAQ,CAAG,YAAvG,EAFJ,CAII,oBAAC,WAAD,EAAa,GAAG,CAAC,eAAjB,CAAiC,KAAK,CAAG,EAAE,CAAC,eAAD,CAAkB,SAAlB,CAA3C,CAA0E,KAAK,CAAG,UAAU,CAAC,YAA7F,CAA4G,QAAQ,CAAG,gBAAvH,EAJJ,CADJ,CAFJ,CAUI,2BAAK,SAAS,CAAE,yBAA2B,UAAU,CAAC,YAAtD,CAAoE,EAAE,CAAE,UAAU,CAAC,QAAnF,EACI,oBAAC,WAAD,MADJ,CAVJ,CADJ,CAiBP,CA9CiC,CAiDlC,IAAI,CAAE,KAAK,EAAI,CAEX,KAAM,CAAE,UAAF,EAAiB,KAAvB,CAGA,MACI,4BAAK,SAAS,CAAE,yBAA2B,UAAU,CAAC,YAAtD,CAAoE,EAAE,CAAE,UAAU,CAAC,QAAnF,EACI,oBAAC,WAAD,CAAa,OAAb,MADJ,CAIP,CA3DiC,CAArB,CAAjB;ACAA,iBAAiB,CAAE,mBAAF,CAAuB,CACpC,KAAK,CAAE,EAAE,CAAC,WAAD,CAAc,SAAd,CAD2B,CAEpC,WAAW,CAAE,EAAE,CAAC,4BAAD,CAA+B,SAA/B,CAFqB,CAGpC,IAAI,CAAC,UAH+B,CAIpC,QAAQ,CAAE,SAJ0B,CAKpC,QAAQ,CAAE,CAAE,SAAF,CAAa,WAAb,CAA0B,MAA1B,CAL0B,CAMpC,QAAQ,CAAE,CACN,KAAK,CAAE,CAAC,MAAD,CAAQ,MAAR,CADD,CAN0B,CASpC,UAAU,CAAE,CACR,cAAc,CAAG,CACb,IAAI,CAAE,QADO,CAEb,OAAO,CAAE,WAFI,CADT,CATwB,CAgBpC,IAAI,CAAE,KAAK,EAAI,CAEX,KAAM,CAAE,UAAF,CAAc,aAAd,CAA6B,UAA7B,EAA4C,KAAlD,CACA,KAAK,CAAC,aAAN,CAAqB,CAAE,KAAK,CAAE,MAAT,CAArB,EAEA,KAAM,CAAA,kBAAkB,CAAG,KAAK,EAAI,KAAK,CAAC,aAAN,CAAoB,CAAE,cAAc,CAAE,KAAlB,CAApB,CAApC,CAGA,MACI,qBAAC,KAAD,MACI,oBAAC,SAAD,MAEI,oBAAC,iBAAD,EAAmB,GAAG,CAAC,WAAvB,EACI,oBAAC,SAAD,EAAW,KAAK,CAAG,EAAE,CAAC,eAAD,CAAkB,SAAlB,CAArB,EAEI,oBAAC,aAAD,EAAe,GAAG,CAAC,gBAAnB,CAAoC,KAAK,CAAG,EAAE,CAAE,gBAAF,CAAoB,SAApB,CAA9C,CACI,KAAK,CAAG,UAAU,CAAC,cAAX,CAA4B,UAAU,CAAC,cAAvC,CAAwD,EADpE,CAEI,OAAO,CAAE,CACL,CAAE,KAAK,CAAE,SAAT,CAAoB,KAAK,CAAE,WAA3B,CADK,CAEL,CAAE,KAAK,CAAE,kBAAT,CAA6B,KAAK,CAAE,cAApC,CAFK,CAGL,CAAE,KAAK,CAAE,sBAAT,CAAiC,KAAK,CAAE,iBAAxC,CAHK,CAFb,CAOI,QAAQ,CAAG,kBAPf,EAFJ,CADJ,CAFJ,CAgBI,2BAAK,SAAS,CAAE,mBAAqB,UAAU,CAAC,cAAhD,EACI,oBAAC,WAAD,MADJ,CAhBJ,CADJ,CAuBP,CAhDmC,CAmDpC,IAAI,CAAE,KAAK,EAAI,CAEX,KAAM,CAAE,UAAF,EAAiB,KAAvB,CAGA,MACI,4BAAK,SAAS,CAAE,mBAAqB,UAAU,CAAC,cAAhD,EACI,oBAAC,WAAD,CAAa,OAAb,MADJ,CAIP,CA7DmC,CAAvB,CAAjB;ACAA,iBAAiB,CAAE,cAAF,CAAkB,CAC/B,KAAK,CAAE,EAAE,CAAC,UAAD,CAAa,SAAb,CADsB,CAE/B,WAAW,CAAE,EAAE,CAAC,iBAAD,CAAoB,SAApB,CAFgB,CAG/B,IAAI,CAAC,UAH0B,CAI/B,QAAQ,CAAE,SAJqB,CAK/B,QAAQ,CAAE,CAAE,SAAF,CAAa,WAAb,CAA0B,MAA1B,CALqB,CAM/B,QAAQ,CAAE,CACN,KAAK,CAAE,CAAC,MAAD,CAAQ,MAAR,CADD,CANqB,CAS/B,UAAU,CAAE,CACR,SAAS,CAAG,CACR,IAAI,CAAE,QADE,CAER,OAAO,CAAE,KAFD,CADJ,CAMR,aAAa,CAAG,CACZ,IAAI,CAAE,QADM,CAEZ,OAAO,CAAE,EAFG,CANR,CAUR,UAAU,CAAG,CACT,IAAI,CAAE,QADG,CAET,OAAO,CAAE,EAFA,CAVL,CAcR,eAAe,CAAG,CACd,IAAI,CAAE,QADQ,CAEd,OAAO,CAAE,EAFK,CAdV,CAkBR,eAAe,CAAG,CACd,IAAI,CAAE,QADQ,CAEd,OAAO,CAAE,EAFK,CAlBV,CAuBR,UAAU,CAAG,CACT,IAAI,CAAE,QADG,CAET,OAAO,CAAE,EAFA,CAvBL,CA2BR,UAAU,CAAG,CACT,IAAI,CAAE,QADG,CAET,OAAO,CAAE,EAFA,CA3BL,CA+BR,UAAU,CAAG,CACT,IAAI,CAAE,QADG,CAET,OAAO,CAAE,EAFA,CA/BL,CAmCR,UAAU,CAAG,CACT,IAAI,CAAE,QADG,CAET,OAAO,CAAE,EAFA,CAnCL,CAuCR,UAAU,CAAG,CACT,IAAI,CAAE,QADG,CAET,OAAO,CAAE,EAFA,CAvCL,CATmB,CAsD/B,IAAI,CAAE,KAAK,EAAI,CAEX,KAAM,CAAE,UAAF,CAAc,aAAd,CAA6B,UAA7B,EAA4C,KAAlD,CACA,KAAK,CAAC,aAAN,CAAqB,CAAE,KAAK,CAAE,MAAT,CAArB,EAEA,KAAM,CAAA,aAAa,CAAG,KAAK,EAAI,KAAK,CAAC,aAAN,CAAoB,CAAE,SAAS,CAAE,KAAb,CAApB,CAA/B,CAEA,KAAM,CAAA,iBAAiB,CAAG,KAAK,EAAI,KAAK,CAAC,aAAN,CAAoB,CAAE,aAAa,CAAE,KAAjB,CAApB,CAAnC,CACA,KAAM,CAAA,cAAc,CAAG,KAAK,EAAI,KAAK,CAAC,aAAN,CAAoB,CAAE,UAAU,CAAE,KAAd,CAApB,CAAhC,CACA,KAAM,CAAA,mBAAmB,CAAG,KAAK,EAAI,KAAK,CAAC,aAAN,CAAoB,CAAE,eAAe,CAAE,KAAnB,CAApB,CAArC,CACA,KAAM,CAAA,mBAAmB,CAAG,KAAK,EAAI,KAAK,CAAC,aAAN,CAAoB,CAAE,eAAe,CAAE,KAAnB,CAApB,CAArC,CAEA,KAAM,CAAA,cAAc,CAAG,KAAK,EAAI,KAAK,CAAC,aAAN,CAAoB,CAAE,UAAU,CAAG,KAAf,CAApB,CAAhC,CACA,KAAM,CAAA,cAAc,CAAG,KAAK,EAAI,KAAK,CAAC,aAAN,CAAoB,CAAE,UAAU,CAAG,KAAf,CAApB,CAAhC,CACA,KAAM,CAAA,cAAc,CAAG,KAAK,EAAI,KAAK,CAAC,aAAN,CAAoB,CAAE,UAAU,CAAG,KAAf,CAApB,CAAhC,CACA,KAAM,CAAA,cAAc,CAAG,KAAK,EAAI,KAAK,CAAC,aAAN,CAAoB,CAAE,UAAU,CAAG,KAAf,CAApB,CAAhC,CACA,KAAM,CAAA,cAAc,CAAG,KAAK,EAAI,KAAK,CAAC,aAAN,CAAoB,CAAE,UAAU,CAAG,KAAf,CAApB,CAAhC,CAEA,QAAS,CAAA,WAAT,CAAsB,IAAtB,CAA4B,CAExB,GAAI,UAAU,CAAC,SAAX,GAAyB,KAA7B,CAAoC,CAChC,MAAO,OAAS,UAAU,CAAC,aAApB,CAAoC,UAAU,CAAC,UAA/C,CAA4D,UAAU,CAAC,eAAvE,CAAyF,UAAU,CAAC,eAC9G,CACJ,CAED,QAAS,CAAA,iBAAT,CAA4B,IAA5B,CAAkC,CAE9B,GAAI,UAAU,CAAC,SAAX,GAAyB,KAA7B,CAAoC,CAAC,MAAQ,gCAErC,oBAAC,aAAD,EAAe,GAAG,CAAC,eAAnB,CAAmC,KAAK,CAAC,eAAzC,CAAyD,KAAK,CAAE,UAAU,CAAC,aAA3E,CAA0F,QAAQ,CAAG,iBAArG,CACI,OAAO,CAAE,CACL,CAAE,KAAK,CAAE,SAAT,CAAoB,KAAK,CAAE,EAA3B,CADK,CAEL,CAAE,KAAK,CAAE,SAAT,CAAoB,KAAK,CAAE,cAA3B,CAFK,CADb,EAFqC,CASrC,oBAAC,aAAD,EAAe,GAAG,CAAC,YAAnB,CAAgC,KAAK,CAAC,YAAtC,CAAmD,KAAK,CAAE,UAAU,CAAC,UAArE,CAAiF,QAAQ,CAAG,cAA5F,CACI,OAAO,CAAE,CACL,CAAE,KAAK,CAAE,SAAT,CAAoB,KAAK,CAAE,EAA3B,CADK,CAEL,CAAE,KAAK,CAAE,WAAT,CAAsB,KAAK,CAAE,YAA7B,CAFK,CAGL,CAAE,KAAK,CAAE,cAAT,CAAyB,KAAK,CAAE,eAAhC,CAHK,CAIL,CAAE,KAAK,CAAE,eAAT,CAA0B,KAAK,CAAE,gBAAjC,CAJK,CAKL,CAAE,KAAK,CAAE,cAAT,CAAyB,KAAK,CAAE,eAAhC,CALK,CADb,EATqC,CAmBrC,oBAAC,aAAD,EAAe,GAAG,CAAC,aAAnB,CAAiC,KAAK,CAAC,wBAAvC,CAAgE,KAAK,CAAE,UAAU,CAAC,eAAlF,CAAmG,QAAQ,CAAG,mBAA9G,CACI,OAAO,CAAE,CACL,CAAE,KAAK,CAAE,SAAT,CAAoB,KAAK,CAAE,EAA3B,CADK,CAEL,CAAE,KAAK,CAAE,QAAT,CAAmB,KAAK,CAAE,iBAA1B,CAFK,CAGL,CAAE,KAAK,CAAE,iBAAT,CAA4B,KAAK,CAAE,gBAAnC,CAHK,CAIL,CAAE,KAAK,CAAE,eAAT,CAA0B,KAAK,CAAE,cAAjC,CAJK,CAKL,CAAE,KAAK,CAAE,iBAAT,CAA4B,KAAK,CAAE,eAAnC,CALK,CAML,CAAE,KAAK,CAAE,iBAAT,CAA4B,KAAK,CAAE,gBAAnC,CANK,CADb,EAnBqC,CA8BrC,oBAAC,aAAD,EAAe,GAAG,CAAC,aAAnB,CAAiC,KAAK,CAAC,sBAAvC,CAA8D,KAAK,CAAE,UAAU,CAAC,eAAhF,CAAiG,QAAQ,CAAG,mBAA5G,CACI,OAAO,CAAE,CACL,CAAE,KAAK,CAAE,SAAT,CAAoB,KAAK,CAAE,EAA3B,CADK,CAEL,CAAE,KAAK,CAAE,QAAT,CAAmB,KAAK,CAAE,iBAA1B,CAFK,CAGL,CAAE,KAAK,CAAE,iBAAT,CAA4B,KAAK,CAAE,gBAAnC,CAHK,CAIL,CAAE,KAAK,CAAE,eAAT,CAA0B,KAAK,CAAE,cAAjC,CAJK,CADb,EA9BqC,CAsCrC,CAER,GAAG,UAAU,CAAC,SAAX,GAAyB,SAA5B,CAAuC,CAAC,MAAQ,gCAE5C,oBAAC,aAAD,EAAe,GAAG,CAAC,YAAnB,CAAgC,KAAK,CAAC,wBAAtC,CAA+D,KAAK,CAAE,UAAU,CAAC,UAAjF,CAA6F,QAAQ,CAAG,cAAxG,CACI,OAAO,CAAE,CACL,CAAE,KAAK,CAAE,iBAAT,CAA8B,KAAK,CAAE,gBAArC,CADK,CAEL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,gBAArC,CAFK,CAGL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,gBAArC,CAHK,CAIL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,gBAArC,CAJK,CAKL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,gBAArC,CALK,CAML,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,gBAArC,CANK,CAOL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,gBAArC,CAPK,CAQL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,gBAArC,CARK,CASL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,gBAArC,CATK,CAUL,CAAE,KAAK,CAAE,mBAAT,CAA8B,KAAK,CAAE,iBAArC,CAVK,CAWL,CAAE,KAAK,CAAE,mBAAT,CAA8B,KAAK,CAAE,iBAArC,CAXK,CAYL,CAAE,KAAK,CAAE,mBAAT,CAA8B,KAAK,CAAE,iBAArC,CAZK,CADb,EAF4C,CAmB5C,oBAAC,aAAD,EAAe,GAAG,CAAC,YAAnB,CAAgC,KAAK,CAAC,uBAAtC,CAA8D,KAAK,CAAE,UAAU,CAAC,UAAhF,CAA4F,QAAQ,CAAG,cAAvG,CACI,OAAO,CAAE,CACL,CAAE,KAAK,CAAE,iBAAT,CAA8B,KAAK,CAAE,eAArC,CADK,CAEL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,eAArC,CAFK,CAGL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,eAArC,CAHK,CAIL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,eAArC,CAJK,CAKL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,eAArC,CALK,CAML,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,eAArC,CANK,CAOL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,eAArC,CAPK,CAQL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,eAArC,CARK,CASL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,eAArC,CATK,CAUL,CAAE,KAAK,CAAE,mBAAT,CAA8B,KAAK,CAAE,gBAArC,CAVK,CAWL,CAAE,KAAK,CAAE,mBAAT,CAA8B,KAAK,CAAE,gBAArC,CAXK,CAYL,CAAE,KAAK,CAAE,mBAAT,CAA8B,KAAK,CAAE,gBAArC,CAZK,CADb,EAnB4C,CAoC5C,oBAAC,aAAD,EAAe,GAAG,CAAC,YAAnB,CAAgC,KAAK,CAAC,wBAAtC,CAA+D,KAAK,CAAE,UAAU,CAAC,UAAjF,CAA6F,QAAQ,CAAG,cAAxG,CACI,OAAO,CAAE,CACL,CAAE,KAAK,CAAE,iBAAT,CAA8B,KAAK,CAAE,eAArC,CADK,CAEL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,eAArC,CAFK,CAGL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,eAArC,CAHK,CAIL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,eAArC,CAJK,CAKL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,eAArC,CALK,CAML,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,eAArC,CANK,CAOL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,eAArC,CAPK,CAQL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,eAArC,CARK,CASL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,eAArC,CATK,CAUL,CAAE,KAAK,CAAE,mBAAT,CAA8B,KAAK,CAAE,gBAArC,CAVK,CAWL,CAAE,KAAK,CAAE,mBAAT,CAA8B,KAAK,CAAE,gBAArC,CAXK,CAYL,CAAE,KAAK,CAAE,mBAAT,CAA8B,KAAK,CAAE,gBAArC,CAZK,CADb,EApC4C,CAqD5C,oBAAC,aAAD,EAAe,GAAG,CAAC,YAAnB,CAAgC,KAAK,CAAC,wBAAtC,CAA+D,KAAK,CAAE,UAAU,CAAC,UAAjF,CAA6F,QAAQ,CAAG,cAAxG,CACI,OAAO,CAAE,CACL,CAAE,KAAK,CAAE,iBAAT,CAA8B,KAAK,CAAE,eAArC,CADK,CAEL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,eAArC,CAFK,CAGL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,eAArC,CAHK,CAIL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,eAArC,CAJK,CAKL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,eAArC,CALK,CAML,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,eAArC,CANK,CAOL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,eAArC,CAPK,CAQL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,eAArC,CARK,CASL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,eAArC,CATK,CAUL,CAAE,KAAK,CAAE,mBAAT,CAA8B,KAAK,CAAE,gBAArC,CAVK,CAWL,CAAE,KAAK,CAAE,mBAAT,CAA8B,KAAK,CAAE,gBAArC,CAXK,CAYL,CAAE,KAAK,CAAE,mBAAT,CAA8B,KAAK,CAAE,gBAArC,CAZK,CADb,EArD4C,CAsE5C,oBAAC,aAAD,EAAe,GAAG,CAAC,YAAnB,CAAgC,KAAK,CAAC,wBAAtC,CAA+D,KAAK,CAAE,UAAU,CAAC,UAAjF,CAA6F,QAAQ,CAAG,cAAxG,CACI,OAAO,CAAE,CACL,CAAE,KAAK,CAAE,iBAAT,CAA8B,KAAK,CAAE,aAArC,CADK,CAEL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,aAArC,CAFK,CAGL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,aAArC,CAHK,CAIL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,aAArC,CAJK,CAKL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,aAArC,CALK,CAML,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,aAArC,CANK,CAOL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,aAArC,CAPK,CAQL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,aAArC,CARK,CASL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,aAArC,CATK,CAUL,CAAE,KAAK,CAAE,mBAAT,CAA8B,KAAK,CAAE,cAArC,CAVK,CAWL,CAAE,KAAK,CAAE,mBAAT,CAA8B,KAAK,CAAE,cAArC,CAXK,CAYL,CAAE,KAAK,CAAE,mBAAT,CAA8B,KAAK,CAAE,cAArC,CAZK,CADb,EAtE4C,CAsFxC,CACX,CAED,MACI,qBAAC,KAAD,MACI,oBAAC,SAAD,MAEI,oBAAC,iBAAD,EAAmB,GAAG,CAAC,WAAvB,EACI,oBAAC,SAAD,EAAW,KAAK,CAAG,EAAE,CAAC,eAAD,CAAkB,SAAlB,CAArB,EAEI,oBAAC,aAAD,EAAe,GAAG,CAAC,gBAAnB,CAAoC,KAAK,CAAC,WAA1C,CAAsD,KAAK,CAAE,UAAU,CAAC,SAAxE,CAAmF,QAAQ,CAAG,aAA9F,CACI,OAAO,CAAE,CACL,CAAE,KAAK,CAAE,eAAT,CAA0B,KAAK,CAAE,KAAjC,CADK,CAEL,CAAE,KAAK,CAAE,cAAT,CAAyB,KAAK,CAAE,SAAhC,CAFK,CADb,EAFJ,CAQK,iBAAiB,CAAC,UAAU,CAAC,SAAZ,CARtB,CADJ,CAFJ,CAcI,2BAAK,SAAS,CAAE,cAAgB,WAAW,CAAC,UAAU,CAAC,SAAZ,CAA3C,EACI,oBAAC,WAAD,MADJ,CAdJ,CADJ,CAqBP,CAxO8B,CA2O/B,IAAI,CAAE,KAAK,EAAI,CAEX,KAAM,CAAE,UAAF,EAAiB,KAAvB,CAEA,QAAS,CAAA,WAAT,CAAsB,IAAtB,CAA4B,CAExB,GAAI,UAAU,CAAC,SAAX,GAAyB,KAA7B,CAAoC,CAChC,MAAO,OAAS,UAAU,CAAC,aAApB,CAAoC,UAAU,CAAC,UAA/C,CAA4D,UAAU,CAAC,eAAvE,CAAyF,UAAU,CAAC,eAC9G,CACJ,CAED,MACI,4BAAK,SAAS,CAAE,cAAgB,WAAW,CAAC,UAAU,CAAC,SAAZ,CAA3C,EACI,oBAAC,WAAD,CAAa,OAAb,MADJ,CAIP,CA3P8B,CAAlB,CAAjB;ACAA,iBAAiB,CAAE,qBAAF,CAAyB,CACtC,KAAK,CAAE,EAAE,CAAC,aAAD,CAAgB,SAAhB,CAD6B,CAEtC,WAAW,CAAE,EAAE,CAAC,wBAAD,CAA2B,SAA3B,CAFuB,CAGtC,IAAI,CAAC,UAHiC,CAItC,QAAQ,CAAE,SAJ4B,CAKtC,QAAQ,CAAE,CAAE,SAAF,CAAa,WAAb,CAA0B,MAA1B,CAL4B,CAMtC,QAAQ,CAAE,CACN,KAAK,CAAE,CAAC,MAAD,CAAQ,MAAR,CADD,CAN4B,CAStC,UAAU,CAAE,CACR,WAAW,CAAG,CACV,IAAI,CAAE,QADI,CAEV,OAAO,CAAE,SAFC,CADN,CAKR,YAAY,CAAG,CACX,IAAI,CAAE,QADK,CAEX,OAAO,CAAE,EAFE,CALP,CASR,SAAS,CAAG,CACR,IAAI,CAAE,QADE,CAER,OAAO,CAAE,EAFD,CATJ,CAaR,SAAS,CAAG,CACR,IAAI,CAAE,QADE,CAER,OAAO,CAAE,EAFD,CAbJ,CAiBR,SAAS,CAAG,CACR,IAAI,CAAE,QADE,CAER,OAAO,CAAE,EAFD,CAjBJ,CAqBR,SAAS,CAAG,CACR,IAAI,CAAE,QADE,CAER,OAAO,CAAE,EAFD,CArBJ,CAyBR,SAAS,CAAG,CACR,IAAI,CAAE,QADE,CAER,OAAO,CAAE,EAFD,CAzBJ,CA6BR,SAAS,CAAG,CACR,IAAI,CAAE,QADE,CAER,OAAO,CAAE,EAFD,CA7BJ,CAT0B,CA4CtC,IAAI,CAAE,KAAK,EAAI,CAEX,KAAM,CAAE,UAAF,CAAc,aAAd,CAA6B,UAA7B,EAA4C,KAAlD,CACA,KAAK,CAAC,aAAN,CAAqB,CAAE,KAAK,CAAE,MAAT,CAArB,EAEA,KAAM,CAAA,eAAe,CAAG,KAAK,EAAI,KAAK,CAAC,aAAN,CAAoB,CAAE,WAAW,CAAE,KAAf,CAApB,CAAjC,CACA,KAAM,CAAA,gBAAgB,CAAG,KAAK,EAAI,KAAK,CAAC,aAAN,CAAoB,CAAE,YAAY,CAAE,KAAhB,CAApB,CAAlC,CAEA,KAAM,CAAA,aAAa,CAAG,KAAK,EAAI,KAAK,CAAC,aAAN,CAAoB,CAAE,SAAS,CAAG,KAAd,CAApB,CAA/B,CACA,KAAM,CAAA,aAAa,CAAG,KAAK,EAAI,KAAK,CAAC,aAAN,CAAoB,CAAE,SAAS,CAAG,KAAd,CAApB,CAA/B,CACA,KAAM,CAAA,aAAa,CAAG,KAAK,EAAI,KAAK,CAAC,aAAN,CAAoB,CAAE,SAAS,CAAG,KAAd,CAApB,CAA/B,CACA,KAAM,CAAA,aAAa,CAAG,KAAK,EAAI,KAAK,CAAC,aAAN,CAAoB,CAAE,SAAS,CAAG,KAAd,CAApB,CAA/B,CACA,KAAM,CAAA,aAAa,CAAG,KAAK,EAAI,KAAK,CAAC,aAAN,CAAoB,CAAE,SAAS,CAAG,KAAd,CAApB,CAA/B,CACA,KAAM,CAAA,aAAa,CAAG,KAAK,EAAI,KAAK,CAAC,aAAN,CAAoB,CAAE,SAAS,CAAG,KAAd,CAApB,CAA/B,CAEA,QAAS,CAAA,MAAT,CAAiB,IAAjB,CAAuB,CAEnB,GAAI,UAAU,CAAC,WAAX,GAA2B,QAA/B,CAAyC,CACrC,MAAO,QACV,CAFD,IAEO,IAAI,UAAU,CAAC,WAAX,GAA2B,SAA/B,CAA0C,CAC7C,MAAQ,CAAA,UAAU,CAAC,SACtB,CAFM,IAEA,IAAI,UAAU,CAAC,WAAX,GAA2B,UAA/B,CAA2C,CAC9C,MAAQ,CAAA,UAAU,CAAC,SAAX,CAAuB,UAAU,CAAC,SAAlC,CAA8C,UAAU,CAAC,SAAzD,CAAqE,UAAU,CAAC,SAAhF,CAA4F,UAAU,CAAC,SAClH,CACJ,CAED,QAAS,CAAA,mBAAT,CAA8B,IAA9B,CAAoC,CAEhC,GAAG,UAAU,CAAC,WAAX,GAA2B,UAA9B,CAA0C,CAAC,MAAQ,gCAE/C,oBAAC,aAAD,EAAe,GAAG,CAAC,WAAnB,CAA+B,KAAK,CAAC,wBAArC,CAA8D,KAAK,CAAE,UAAU,CAAC,SAAhF,CAA2F,QAAQ,CAAG,aAAtG,CACI,OAAO,CAAE,CACL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,WAAhC,CADK,CAEL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,WAAhC,CAFK,CAGL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,WAAhC,CAHK,CAIL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,WAAhC,CAJK,CAKL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,WAAhC,CALK,CAML,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,WAAhC,CANK,CAOL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,WAAhC,CAPK,CAQL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,WAAhC,CARK,CASL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,WAAhC,CATK,CAUL,CAAE,KAAK,CAAE,cAAT,CAAyB,KAAK,CAAE,YAAhC,CAVK,CAWL,CAAE,KAAK,CAAE,cAAT,CAAyB,KAAK,CAAE,YAAhC,CAXK,CAYL,CAAE,KAAK,CAAE,cAAT,CAAyB,KAAK,CAAE,YAAhC,CAZK,CADb,EAF+C,CAmB/C,oBAAC,aAAD,EAAe,GAAG,CAAC,WAAnB,CAA+B,KAAK,CAAC,uBAArC,CAA6D,KAAK,CAAE,UAAU,CAAC,SAA/E,CAA0F,QAAQ,CAAG,aAArG,CACI,OAAO,CAAE,CACL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,UAAhC,CADK,CAEL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,UAAhC,CAFK,CAGL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,UAAhC,CAHK,CAIL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,UAAhC,CAJK,CAKL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,UAAhC,CALK,CAML,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,UAAhC,CANK,CAOL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,UAAhC,CAPK,CAQL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,UAAhC,CARK,CASL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,UAAhC,CATK,CAUL,CAAE,KAAK,CAAE,cAAT,CAAyB,KAAK,CAAE,WAAhC,CAVK,CAWL,CAAE,KAAK,CAAE,cAAT,CAAyB,KAAK,CAAE,WAAhC,CAXK,CAYL,CAAE,KAAK,CAAE,cAAT,CAAyB,KAAK,CAAE,WAAhC,CAZK,CADb,EAnB+C,CAoC/C,oBAAC,aAAD,EAAe,GAAG,CAAC,WAAnB,CAA+B,KAAK,CAAC,wBAArC,CAA8D,KAAK,CAAE,UAAU,CAAC,SAAhF,CAA2F,QAAQ,CAAG,aAAtG,CACI,OAAO,CAAE,CACL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,UAAhC,CADK,CAEL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,UAAhC,CAFK,CAGL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,UAAhC,CAHK,CAIL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,UAAhC,CAJK,CAKL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,UAAhC,CALK,CAML,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,UAAhC,CANK,CAOL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,UAAhC,CAPK,CAQL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,UAAhC,CARK,CASL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,UAAhC,CATK,CAUL,CAAE,KAAK,CAAE,cAAT,CAAyB,KAAK,CAAE,WAAhC,CAVK,CAWL,CAAE,KAAK,CAAE,cAAT,CAAyB,KAAK,CAAE,WAAhC,CAXK,CAYL,CAAE,KAAK,CAAE,cAAT,CAAyB,KAAK,CAAE,WAAhC,CAZK,CADb,EApC+C,CAqD/C,oBAAC,aAAD,EAAe,GAAG,CAAC,WAAnB,CAA+B,KAAK,CAAC,eAArC,CAAqD,KAAK,CAAE,UAAU,CAAC,SAAvE,CAAkF,QAAQ,CAAG,aAA7F,CACI,OAAO,CAAE,CACL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,UAAhC,CADK,CAEL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,UAAhC,CAFK,CAGL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,UAAhC,CAHK,CAIL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,UAAhC,CAJK,CAKL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,UAAhC,CALK,CAML,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,UAAhC,CANK,CAOL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,UAAhC,CAPK,CAQL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,UAAhC,CARK,CASL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,UAAhC,CATK,CAUL,CAAE,KAAK,CAAE,cAAT,CAAyB,KAAK,CAAE,WAAhC,CAVK,CAWL,CAAE,KAAK,CAAE,cAAT,CAAyB,KAAK,CAAE,WAAhC,CAXK,CAYL,CAAE,KAAK,CAAE,cAAT,CAAyB,KAAK,CAAE,WAAhC,CAZK,CADb,EArD+C,CAsE/C,oBAAC,aAAD,EAAe,GAAG,CAAC,WAAnB,CAA+B,KAAK,CAAC,qBAArC,CAA2D,KAAK,CAAE,UAAU,CAAC,SAA7E,CAAwF,QAAQ,CAAG,aAAnG,CACI,OAAO,CAAE,CACL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,QAAhC,CADK,CAEL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,QAAhC,CAFK,CAGL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,QAAhC,CAHK,CAIL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,QAAhC,CAJK,CAKL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,QAAhC,CALK,CAML,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,QAAhC,CANK,CAOL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,QAAhC,CAPK,CAQL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,QAAhC,CARK,CASL,CAAE,KAAK,CAAE,aAAT,CAAyB,KAAK,CAAE,QAAhC,CATK,CAUL,CAAE,KAAK,CAAE,cAAT,CAAyB,KAAK,CAAE,SAAhC,CAVK,CAWL,CAAE,KAAK,CAAE,cAAT,CAAyB,KAAK,CAAE,SAAhC,CAXK,CAYL,CAAE,KAAK,CAAE,cAAT,CAAyB,KAAK,CAAE,SAAhC,CAZK,CADb,EAtE+C,CAsF3C,CAER,GAAG,UAAU,CAAC,WAAX,GAA2B,SAA9B,CAAyC,CAAC,MACtC,qBAAC,aAAD,EAAe,GAAG,CAAC,WAAnB,CAA+B,KAAK,CAAC,qBAArC,CAA2D,KAAK,CAAE,UAAU,CAAC,SAA7E,CAAwF,QAAQ,CAAG,aAAnG,CACI,OAAO,CAAE,CACL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,UAArC,CADK,CAEL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,UAArC,CAFK,CAGL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,UAArC,CAHK,CAIL,CAAE,KAAK,CAAE,kBAAT,CAA8B,KAAK,CAAE,UAArC,CAJK,CAKL,CAAE,KAAK,CAAE,mBAAT,CAA8B,KAAK,CAAE,WAArC,CALK,CAML,CAAE,KAAK,CAAE,mBAAT,CAA8B,KAAK,CAAE,WAArC,CANK,CADb,EAUF,CACL,CAED,MACI,qBAAC,KAAD,MACI,oBAAC,SAAD,MAEI,oBAAC,iBAAD,EAAmB,GAAG,CAAC,WAAvB,EACI,oBAAC,SAAD,EAAW,KAAK,CAAG,EAAE,CAAC,eAAD,CAAkB,SAAlB,CAArB,EAEI,oBAAC,aAAD,EAAe,GAAG,CAAC,gBAAnB,CAAoC,KAAK,CAAC,WAA1C,CAAsD,KAAK,CAAE,UAAU,CAAC,WAAxE,CAAqF,QAAQ,CAAG,eAAhG,CACI,OAAO,CAAE,CACL,CAAE,KAAK,CAAE,iBAAT,CAA4B,KAAK,CAAE,UAAnC,CADK,CAEL,CAAE,KAAK,CAAE,SAAT,CAAoB,KAAK,CAAE,SAA3B,CAFK,CAGL,CAAE,KAAK,CAAE,SAAT,CAAoB,KAAK,CAAE,QAA3B,CAHK,CADb,EAFJ,CAUI,oBAAC,WAAD,EAAa,GAAG,CAAC,cAAjB,CAAgC,KAAK,CAAC,cAAtC,CAAqD,KAAK,CAAG,UAAU,CAAC,YAAxE,CAAuF,QAAQ,CAAG,gBAAlG,EAVJ,CAYK,mBAAmB,CAAC,UAAU,CAAC,WAAZ,CAZxB,CADJ,CAFJ,CAkBI,2BAAK,SAAS,CAAE,aAAe,MAAM,CAAC,UAAU,CAAC,WAAZ,CAArB,CAAgD,UAAU,CAAC,YAA3E,EACI,oBAAC,WAAD,MADJ,CAlBJ,CADJ,CAyBP,CAxMqC,CA2MtC,IAAI,CAAE,KAAK,EAAI,CAEX,KAAM,CAAE,UAAF,EAAiB,KAAvB,CAEA,QAAS,CAAA,MAAT,CAAiB,IAAjB,CAAuB,CAEnB,GAAI,UAAU,CAAC,WAAX,GAA2B,QAA/B,CAAyC,CACrC,MAAO,QACV,CAFD,IAEO,IAAI,UAAU,CAAC,WAAX,GAA2B,SAA/B,CAA0C,CAC7C,MAAQ,CAAA,UAAU,CAAC,SACtB,CAFM,IAEA,IAAI,UAAU,CAAC,WAAX,GAA2B,UAA/B,CAA2C,CAC9C,MAAQ,CAAA,UAAU,CAAC,SAAX,CAAuB,UAAU,CAAC,SAAlC,CAA8C,UAAU,CAAC,SAAzD,CAAqE,UAAU,CAAC,SAAhF,CAA4F,UAAU,CAAC,SAClH,CACJ,CAED,MACI,4BAAK,SAAS,CAAE,aAAe,MAAM,CAAC,UAAU,CAAC,WAAZ,CAArC,EACI,oBAAC,WAAD,CAAa,OAAb,MADJ,CAIP,CA/NqC,CAAzB,CAAjB","file":"blocks.min.js","sourcesContent":["/*global window,wp,Glide, document,breakPoints_990,breakPoints_810,breakPoints_650,breakPoints_490,breakPoints_400, getSiblings ,setInterval, clearInterval,getElements,getElement,getNextSibling,getPrevSibling,setAttributes,getComputedStyle,pageDirection,console*/\n/*jslint es6 */\n\n/*====== Gutenberg Components ==========*/\nconst {__} = wp.i18n;\nconst {registerBlockType} = wp.blocks;\nconst {withInstanceId} = wp.compose;\n/*===== Editable Components =====*/\nconst {\n    PlainText,\n    RichText,\n    Editable,\n    MediaUpload,\n    MediaUploadCheck,\n    AlignmentToolbar,\n    BlockControls,\n    ColorPalette,\n    InnerBlocks,\n    InspectorControls\n} = wp.blockEditor;\n\n/*===== Editor Components =====*/\nconst {\n    Draggable,\n    Panel,\n    PanelBody,\n    PanelRow,\n    SelectControl,\n    Button,\n    DropdownMenu,\n    withAPIData,\n    TextControl,\n    RangeControl,\n    FormFileUpload,\n    BaseControl\n} = wp.components;\n\n/*===== Editor Server Render =====*/\nconst ServerSideRender = wp.serverSideRender;\n/*===== Editor Elements Components =====*/\nconst {Component, Fragment} = wp.element;\n/*===== Editor Dynamic Data =====*/\nconst {select, withSelect, dispatch} = wp.data;\n/*===== Editor Component Wraper =====*/\nconst {createHigherOrderComponent} = wp.compose;\n","//======> Docementation <======//\nregisterBlockType( 'tornado/section', {\n    title: __('Section', 'tornado'),\n    description: __('Full Width Section Wraper', 'tornado'),\n    icon:'feedback',\n    category: 'tornado',\n    keywords: [ 'tornado', 'container', 'grid', 'section' ],\n    supports: {\n        align: ['full','wide']\n    },\n    attributes: {\n        custom_class : {\n            type: 'string',\n            default: '',\n        },\n        block_id : {\n            type: 'string',\n            default: '',\n        },\n    },\n    //==== Editing Mode ====//\n    edit: props => {\n        //==== Block Data ====//\n        const { attributes, setAttributes, isSelected } = props;\n        props.setAttributes( { align: 'full' } );\n        //==== Container Class ====//\n        const set_custom_class = value => props.setAttributes({ custom_class: value });\n        const set_block_id = value => setAttributes({ block_id: value });\n        //==== Block Structure ====//\n        return (\n            <Panel>\n                <PanelBody>\n                    {/*===== Controls ======*/}\n                    <InspectorControls key=\"inspector\">\n                        <PanelBody title={ __('Block Options', 'tornado') }>\n                            {/*=== Section ID ===*/}\n                            <TextControl key=\"block-id\" label={ __('CSS ID', 'tornado') } value={ attributes.block_id } onChange={ set_block_id } />\n                            {/*=== Section Title ===*/}\n                            <TextControl key=\"section-title\" label={ __('Add CSS Class', 'tornado') } value={ attributes.custom_class } onChange={ set_custom_class } />\n                        </PanelBody>\n                    </InspectorControls>\n                    <div className={'section-block section ' + attributes.custom_class} id={attributes.block_id}>\n                        <InnerBlocks />\n                    </div>\n                </PanelBody>\n            </Panel>\n        );\n    },\n\n    //==== Puplish Mode ====//\n    save: props => {\n        //==== Block Data ====//\n        const { attributes } = props;\n\n        //==== Block Structure ====//\n        return (\n            <div className={'section-block section ' + attributes.custom_class} id={attributes.block_id}>\n                <InnerBlocks.Content />\n            </div>\n        );\n    },\n} );","//======> Docementation <======//\nregisterBlockType( 'tornado/container', {\n    title: __('Container', 'tornado'),\n    description: __('Container Block With Title', 'tornado'),\n    icon:'feedback',\n    category: 'tornado',\n    keywords: [ 'tornado', 'container', 'grid' ],\n    supports: {\n        align: ['full','wide']\n    },\n    attributes: {\n        container_type : {\n            type: 'string',\n            default: 'container',\n        },\n    },\n    //==== Editing Mode ====//\n    edit: props => {\n        //==== Block Data ====//\n        const { attributes, setAttributes, isSelected } = props;\n        props.setAttributes( { align: 'full' } );\n        //==== Container Class ====//\n        const set_container_type = value => props.setAttributes({ container_type: value });\n\n        //==== Block Structure ====//\n        return (\n            <Panel>\n                <PanelBody>\n                    {/*===== Controls ======*/}\n                    <InspectorControls key=\"inspector\">\n                        <PanelBody title={ __('Block Options', 'tornado') }>\n                            {/* //=== Direction Class ===// */}\n                            <SelectControl key=\"container-type\" label={ __( 'Container Type', 'tornado') }\n                                value={ attributes.container_type ? attributes.container_type : '' }\n                                options={[\n                                    { label: 'Default', value: 'container' },\n                                    { label: 'xLarge Container', value: 'container-xl' },\n                                    { label: 'Full Width Container', value: 'container-fluid' },\n                                ]}\n                                onChange={ set_container_type }\n                            />\n                        </PanelBody>\n                    </InspectorControls>\n                    <div className={'container-block ' + attributes.container_type}>\n                        <InnerBlocks />\n                    </div>\n                </PanelBody>\n            </Panel>\n        );\n    },\n\n    //==== Puplish Mode ====//\n    save: props => {\n        //==== Block Data ====//\n        const { attributes } = props;\n\n        //==== Block Structure ====//\n        return (\n            <div className={'container-block ' + attributes.container_type}>\n                <InnerBlocks.Content />\n            </div>\n        );\n    },\n} );","//======> Docementation <======//\nregisterBlockType( 'tornado/grid', {\n    title: __('Grid Row', 'tornado'),\n    description: __('Grid System Row', 'tornado'),\n    icon:'feedback',\n    category: 'tornado',\n    keywords: [ 'tornado', 'container', 'grid' ],\n    supports: {\n        align: ['full','wide']\n    },\n    attributes: {\n        grid_type : {\n            type: 'string',\n            default: 'row',\n        },\n        /* Standard Options */\n        row_direction : {\n            type: 'string',\n            default: '',\n        },\n        row_gutter : {\n            type: 'string',\n            default: '',\n        },\n        row_alignment_x : {\n            type: 'string',\n            default: '',\n        },\n        row_alignment_y : {\n            type: 'string',\n            default: '',\n        },\n        /* Masonry Options */\n        masonry_xl : {\n            type: 'string',\n            default: '',\n        },\n        masonry_lg : {\n            type: 'string',\n            default: '',\n        },\n        masonry_md : {\n            type: 'string',\n            default: '',\n        },\n        masonry_sm : {\n            type: 'string',\n            default: '',\n        },\n        masonry_xs : {\n            type: 'string',\n            default: '',\n        },\n    },\n    //==== Editing Mode ====//\n    edit: props => {\n        //==== Block Data ====//\n        const { attributes, setAttributes, isSelected } = props;\n        props.setAttributes( { align: 'full' } );\n        //==== Row Type ====//\n        const set_grid_type = value => props.setAttributes({ grid_type: value });\n        //==== Sandard Options ====//\n        const set_row_direction = value => props.setAttributes({ row_direction: value });\n        const set_row_gutter = value => props.setAttributes({ row_gutter: value });\n        const set_row_alignment_x = value => props.setAttributes({ row_alignment_x: value });\n        const set_row_alignment_y = value => props.setAttributes({ row_alignment_y: value });\n        //==== Masonry Columns ====//\n        const set_masonry_xl = value => props.setAttributes({ masonry_xl : value });\n        const set_masonry_lg = value => props.setAttributes({ masonry_lg : value });\n        const set_masonry_md = value => props.setAttributes({ masonry_md : value });\n        const set_masonry_sm = value => props.setAttributes({ masonry_sm : value });\n        const set_masonry_xs = value => props.setAttributes({ masonry_xs : value });\n        //=== Row Classes ====//\n        function grid_output (type) {\n            //==== Normal Grid Options ====//\n            if (attributes.grid_type === 'row') {\n                return 'row ' + attributes.row_direction + attributes.row_gutter + attributes.row_alignment_x + attributes.row_alignment_y;\n            }\n        }\n        //==== Row Type ====//\n        function grid_type_options (type) {\n            //==== Normal Grid Options ====//\n            if (attributes.grid_type === 'row') {return (<div>\n                    {/*==== Row Direction ====*/}\n                    <SelectControl key=\"row-direction\" label=\"Row Direction\" value={attributes.row_direction} onChange={ set_row_direction }\n                        options={[\n                            { label: 'Default', value: '' },\n                            { label: 'Reverse', value: 'row-reverse ' },\n                        ]}\n                    />\n                    {/*==== Row Gutter ====*/}\n                    <SelectControl key=\"row-gutter\" label=\"Row Gutter\" value={attributes.row_gutter} onChange={ set_row_gutter }\n                        options={[\n                            { label: 'Default', value: '' },\n                            { label: 'No Gutter', value: 'no-gutter ' },\n                            { label: 'Small Gutter', value: 'gutter-small ' },\n                            { label: 'Medium Gutter', value: 'gutter-medium ' },\n                            { label: 'Large Gutter', value: 'gutter-large ' },\n                        ]}\n                    />\n                    {/*==== Row Align Horizontally ====*/}\n                    <SelectControl key=\"row-align-x\" label=\"Row Align Horizontally\" value={attributes.row_alignment_x} onChange={ set_row_alignment_x }\n                        options={[\n                            { label: 'Default', value: '' },\n                            { label: 'Center', value: 'align-center-x ' },\n                            { label: 'Direction Start', value: 'align-start-x ' },\n                            { label: 'Direction End', value: 'align-end-x ' },\n                            { label: 'a Round Columns', value: 'align-around ' },\n                            { label: 'Between Columns', value: 'align-between ' },\n                        ]}\n                    />\n                    {/*==== Row Align Vertically ====*/}\n                    <SelectControl key=\"row-align-y\" label=\"Row Align Vertically\" value={attributes.row_alignment_y} onChange={ set_row_alignment_y }\n                        options={[\n                            { label: 'Default', value: '' },\n                            { label: 'Center', value: 'align-center-y ' },\n                            { label: 'Direction Start', value: 'align-start-y ' },\n                            { label: 'Direction End', value: 'align-end-y ' },\n                        ]}\n                    />\n            </div>)}\n            //==== Masonry Grid Options ====//\n            if(attributes.grid_type === 'masonry') {return (<div>\n                {/*==== Extra Large ====*/}\n                <SelectControl key=\"masonry_xl\" label=\"xLarge Screens Columns\" value={attributes.masonry_xl} onChange={ set_masonry_xl }\n                    options={[\n                        { label: '1 Column in Row',   value: 'masonry-xl-1x1' },\n                        { label: '2 Columns in Row',  value: 'masonry-xl-2x1' },\n                        { label: '3 Columns in Row',  value: 'masonry-xl-3x1' },\n                        { label: '4 Columns in Row',  value: 'masonry-xl-4x1' },\n                        { label: '5 Columns in Row',  value: 'masonry-xl-5x1' },\n                        { label: '6 Columns in Row',  value: 'masonry-xl-6x1' },\n                        { label: '7 Columns in Row',  value: 'masonry-xl-7x1' },\n                        { label: '8 Columns in Row',  value: 'masonry-xl-8x1' },\n                        { label: '9 Columns in Row',  value: 'masonry-xl-9x1' },\n                        { label: '10 Columns in Row', value: 'masonry-xl-10x1' },\n                        { label: '11 Columns in Row', value: 'masonry-xl-11x1' },\n                        { label: '12 Columns in Row', value: 'masonry-xl-12x1' },\n                    ]}\n                />\n                {/*==== Large ====*/}\n                <SelectControl key=\"masonry_lg\" label=\"Large Screens Columns\" value={attributes.masonry_lg} onChange={ set_masonry_lg }\n                    options={[\n                        { label: '1 Column in Row',   value: 'masonry-l-1x1' },\n                        { label: '2 Columns in Row',  value: 'masonry-l-2x1' },\n                        { label: '3 Columns in Row',  value: 'masonry-l-3x1' },\n                        { label: '4 Columns in Row',  value: 'masonry-l-4x1' },\n                        { label: '5 Columns in Row',  value: 'masonry-l-5x1' },\n                        { label: '6 Columns in Row',  value: 'masonry-l-6x1' },\n                        { label: '7 Columns in Row',  value: 'masonry-l-7x1' },\n                        { label: '8 Columns in Row',  value: 'masonry-l-8x1' },\n                        { label: '9 Columns in Row',  value: 'masonry-l-9x1' },\n                        { label: '10 Columns in Row', value: 'masonry-l-10x1' },\n                        { label: '11 Columns in Row', value: 'masonry-l-11x1' },\n                        { label: '12 Columns in Row', value: 'masonry-l-12x1' },\n                    ]}\n                />\n                {/*==== Medium ====*/}\n                <SelectControl key=\"masonry_md\" label=\"Medium Screens Columns\" value={attributes.masonry_md} onChange={ set_masonry_md }\n                    options={[\n                        { label: '1 Column in Row',   value: 'masonry-m-1x1' },\n                        { label: '2 Columns in Row',  value: 'masonry-m-2x1' },\n                        { label: '3 Columns in Row',  value: 'masonry-m-3x1' },\n                        { label: '4 Columns in Row',  value: 'masonry-m-4x1' },\n                        { label: '5 Columns in Row',  value: 'masonry-m-5x1' },\n                        { label: '6 Columns in Row',  value: 'masonry-m-6x1' },\n                        { label: '7 Columns in Row',  value: 'masonry-m-7x1' },\n                        { label: '8 Columns in Row',  value: 'masonry-m-8x1' },\n                        { label: '9 Columns in Row',  value: 'masonry-m-9x1' },\n                        { label: '10 Columns in Row', value: 'masonry-m-10x1' },\n                        { label: '11 Columns in Row', value: 'masonry-m-11x1' },\n                        { label: '12 Columns in Row', value: 'masonry-m-12x1' },\n                    ]}\n                />\n                {/*==== Small ====*/}\n                <SelectControl key=\"masonry_sm\" label=\"Medium Screens Columns\" value={attributes.masonry_sm} onChange={ set_masonry_sm }\n                    options={[\n                        { label: '1 Column in Row',   value: 'masonry-s-1x1' },\n                        { label: '2 Columns in Row',  value: 'masonry-s-2x1' },\n                        { label: '3 Columns in Row',  value: 'masonry-s-3x1' },\n                        { label: '4 Columns in Row',  value: 'masonry-s-4x1' },\n                        { label: '5 Columns in Row',  value: 'masonry-s-5x1' },\n                        { label: '6 Columns in Row',  value: 'masonry-s-6x1' },\n                        { label: '7 Columns in Row',  value: 'masonry-s-7x1' },\n                        { label: '8 Columns in Row',  value: 'masonry-s-8x1' },\n                        { label: '9 Columns in Row',  value: 'masonry-s-9x1' },\n                        { label: '10 Columns in Row', value: 'masonry-s-10x1' },\n                        { label: '11 Columns in Row', value: 'masonry-s-11x1' },\n                        { label: '12 Columns in Row', value: 'masonry-s-12x1' },\n                    ]}\n                />\n                {/*==== Extra Small ====*/}\n                <SelectControl key=\"masonry_xs\" label=\"Medium Screens Columns\" value={attributes.masonry_xs} onChange={ set_masonry_xs }\n                    options={[\n                        { label: '1 Column in Row',   value: 'masonry-1x1' },\n                        { label: '2 Columns in Row',  value: 'masonry-2x1' },\n                        { label: '3 Columns in Row',  value: 'masonry-3x1' },\n                        { label: '4 Columns in Row',  value: 'masonry-4x1' },\n                        { label: '5 Columns in Row',  value: 'masonry-5x1' },\n                        { label: '6 Columns in Row',  value: 'masonry-6x1' },\n                        { label: '7 Columns in Row',  value: 'masonry-7x1' },\n                        { label: '8 Columns in Row',  value: 'masonry-8x1' },\n                        { label: '9 Columns in Row',  value: 'masonry-9x1' },\n                        { label: '10 Columns in Row', value: 'masonry-10x1' },\n                        { label: '11 Columns in Row', value: 'masonry-11x1' },\n                        { label: '12 Columns in Row', value: 'masonry-12x1' },\n                    ]}\n                />\n            </div>)}\n        } \n        //==== Block Structure ====//\n        return (\n            <Panel>\n                <PanelBody>\n                    {/*===== Controls ======*/}\n                    <InspectorControls key=\"inspector\">\n                        <PanelBody title={ __('Block Options', 'tornado') }>\n                            {/* //=== Direction Class ===// */}\n                            <SelectControl key=\"container-type\" label=\"Grid Type\" value={attributes.grid_type} onChange={ set_grid_type }\n                                options={[\n                                    { label: 'Standard Grid', value: 'row' },\n                                    { label: 'Masonry Grid', value: 'masonry' },\n                                ]}\n                            />\n                            {grid_type_options(attributes.grid_type)}\n                        </PanelBody>\n                    </InspectorControls>\n                    <div className={'grid-block ' + grid_output(attributes.grid_type)}>\n                        <InnerBlocks />\n                    </div>\n                </PanelBody>\n            </Panel>\n        );\n    },\n\n    //==== Puplish Mode ====//\n    save: props => {\n        //==== Block Data ====//\n        const { attributes } = props;\n        //=== Row Classes ====//\n        function grid_output (type) {\n            //==== Normal Grid Options ====//\n            if (attributes.grid_type === 'row') {\n                return 'row ' + attributes.row_direction + attributes.row_gutter + attributes.row_alignment_x + attributes.row_alignment_y;\n            }\n        }\n        //==== Block Structure ====//\n        return (\n            <div className={'grid-block ' + grid_output(attributes.grid_type)}>\n                <InnerBlocks.Content />\n            </div>\n        );\n    },\n} );","//======> Docementation <======//\nregisterBlockType( 'tornado/grid-column', {\n    title: __('Grid Column', 'tornado'),\n    description: __('Grid System Row Column', 'tornado'),\n    icon:'feedback',\n    category: 'tornado',\n    keywords: [ 'tornado', 'container', 'grid' ],\n    supports: {\n        align: ['full','wide']\n    },\n    attributes: {\n        column_type : {\n            type: 'string',\n            default: 'standrd',\n        },\n        custom_class : {\n            type: 'string',\n            default: '',\n        },\n        column_xl : {\n            type: 'string',\n            default: '',\n        },\n        column_lg : {\n            type: 'string',\n            default: '',\n        },\n        column_md : {\n            type: 'string',\n            default: '',\n        },\n        column_sm : {\n            type: 'string',\n            default: '',\n        },\n        column_xs : {\n            type: 'string',\n            default: '',\n        },\n        column_dy : {\n            type: 'string',\n            default: '',\n        },\n    },\n    //==== Editing Mode ====//\n    edit: props => {\n        //==== Block Data ====//\n        const { attributes, setAttributes, isSelected } = props;\n        props.setAttributes( { align: 'full' } );\n        //==== Column Type ====//\n        const set_column_type = value => props.setAttributes({ column_type: value });\n        const set_custom_class = value => props.setAttributes({ custom_class: value });\n        //==== Columns ====//\n        const set_column_xl = value => props.setAttributes({ column_xl : value });\n        const set_column_lg = value => props.setAttributes({ column_lg : value });\n        const set_column_md = value => props.setAttributes({ column_md : value });\n        const set_column_sm = value => props.setAttributes({ column_sm : value });\n        const set_column_xs = value => props.setAttributes({ column_xs : value });\n        const set_column_dy = value => props.setAttributes({ column_dy : value });\n        //=== Column Classes ====//\n        function column (type) {\n            //==== Normal Grid Options ====//\n            if (attributes.column_type === 'column') {\n                return 'column';\n            } else if (attributes.column_type === 'dynamic') {\n                return (attributes.column_dy);\n            } else if (attributes.column_type === 'standard') {\n                return (attributes.column_xs + attributes.column_sm + attributes.column_md + attributes.column_lg + attributes.column_xl)\n            }\n        }\n        //==== Colum Classes ====//\n        function column_type_options (type) {\n            //==== Standard ====//\n            if(attributes.column_type === 'standard') {return (<div>\n                {/*==== Extra Large ====*/}\n                <SelectControl key=\"column_xl\" label=\"xLarge Screens Columns\" value={attributes.column_xl} onChange={ set_column_xl }\n                    options={[\n                        { label: '1/12 Column',  value: 'col-xl-1 ' },\n                        { label: '2/12 Column',  value: 'col-xl-2 ' },\n                        { label: '3/12 Column',  value: 'col-xl-3 ' },\n                        { label: '4/12 Column',  value: 'col-xl-4 ' },\n                        { label: '5/12 Column',  value: 'col-xl-5 ' },\n                        { label: '6/12 Column',  value: 'col-xl-6 ' },\n                        { label: '7/12 Column',  value: 'col-xl-7 ' },\n                        { label: '8/12 Column',  value: 'col-xl-8 ' },\n                        { label: '9/12 Column',  value: 'col-xl-9 ' },\n                        { label: '10/12 Column', value: 'col-xl-10 ' },\n                        { label: '11/12 Column', value: 'col-xl-11 ' },\n                        { label: '12/12 Column', value: 'col-xl-12 ' },\n                    ]}\n                />\n                {/*==== Large ====*/}\n                <SelectControl key=\"column_lg\" label=\"Large Screens Columns\" value={attributes.column_lg} onChange={ set_column_lg }\n                    options={[\n                        { label: '1/12 Column',  value: 'col-l-1 ' },\n                        { label: '2/12 Column',  value: 'col-l-2 ' },\n                        { label: '3/12 Column',  value: 'col-l-3 ' },\n                        { label: '4/12 Column',  value: 'col-l-4 ' },\n                        { label: '5/12 Column',  value: 'col-l-5 ' },\n                        { label: '6/12 Column',  value: 'col-l-6 ' },\n                        { label: '7/12 Column',  value: 'col-l-7 ' },\n                        { label: '8/12 Column',  value: 'col-l-8 ' },\n                        { label: '9/12 Column',  value: 'col-l-9 ' },\n                        { label: '10/12 Column', value: 'col-l-10 ' },\n                        { label: '11/12 Column', value: 'col-l-11 ' },\n                        { label: '12/12 Column', value: 'col-l-12 ' },\n                    ]}\n                />\n                {/*==== Medium ====*/}\n                <SelectControl key=\"column_md\" label=\"Medium Screens Columns\" value={attributes.column_md} onChange={ set_column_md }\n                    options={[\n                        { label: '1/12 Column',  value: 'col-m-1 ' },\n                        { label: '2/12 Column',  value: 'col-m-2 ' },\n                        { label: '3/12 Column',  value: 'col-m-3 ' },\n                        { label: '4/12 Column',  value: 'col-m-4 ' },\n                        { label: '5/12 Column',  value: 'col-m-5 ' },\n                        { label: '6/12 Column',  value: 'col-m-6 ' },\n                        { label: '7/12 Column',  value: 'col-m-7 ' },\n                        { label: '8/12 Column',  value: 'col-m-8 ' },\n                        { label: '9/12 Column',  value: 'col-m-9 ' },\n                        { label: '10/12 Column', value: 'col-m-10 ' },\n                        { label: '11/12 Column', value: 'col-m-11 ' },\n                        { label: '12/12 Column', value: 'col-m-12 ' },\n                    ]}\n                />\n                {/*==== Small ====*/}\n                <SelectControl key=\"column_sm\" label=\"Small Screens\" value={attributes.column_sm} onChange={ set_column_sm }\n                    options={[\n                        { label: '1/12 Column',  value: 'col-s-1 ' },\n                        { label: '2/12 Column',  value: 'col-s-2 ' },\n                        { label: '3/12 Column',  value: 'col-s-3 ' },\n                        { label: '4/12 Column',  value: 'col-s-4 ' },\n                        { label: '5/12 Column',  value: 'col-s-5 ' },\n                        { label: '6/12 Column',  value: 'col-s-6 ' },\n                        { label: '7/12 Column',  value: 'col-s-7 ' },\n                        { label: '8/12 Column',  value: 'col-s-8 ' },\n                        { label: '9/12 Column',  value: 'col-s-9 ' },\n                        { label: '10/12 Column', value: 'col-s-10 ' },\n                        { label: '11/12 Column', value: 'col-s-11 ' },\n                        { label: '12/12 Column', value: 'col-s-12 ' },\n                    ]}\n                />\n                {/*==== Extra Small ====*/}\n                <SelectControl key=\"column_xs\" label=\"Extra Small Screens\" value={attributes.column_xs} onChange={ set_column_xs }\n                    options={[\n                        { label: '1/12 Column',  value: 'col-1 ' },\n                        { label: '2/12 Column',  value: 'col-2 ' },\n                        { label: '3/12 Column',  value: 'col-3 ' },\n                        { label: '4/12 Column',  value: 'col-4 ' },\n                        { label: '5/12 Column',  value: 'col-5 ' },\n                        { label: '6/12 Column',  value: 'col-6 ' },\n                        { label: '7/12 Column',  value: 'col-7 ' },\n                        { label: '8/12 Column',  value: 'col-8 ' },\n                        { label: '9/12 Column',  value: 'col-9 ' },\n                        { label: '10/12 Column', value: 'col-10 ' },\n                        { label: '11/12 Column', value: 'col-11 ' },\n                        { label: '12/12 Column', value: 'col-12 ' },\n                    ]}\n                />\n            </div>)}\n            //==== Dynamic ====//\n            if(attributes.column_type === 'dynamic') {return (\n                <SelectControl key=\"column_dy\" label=\"Columns in Each Row\" value={attributes.column_dy} onChange={ set_column_dy }\n                    options={[\n                        { label: '5 Columns in Row',  value: 'box-5x1 ' },\n                        { label: '7 Columns in Row',  value: 'box-7x1 ' },\n                        { label: '8 Columns in Row',  value: 'box-8x1 ' },\n                        { label: '9 Columns in Row',  value: 'box-9x1 ' },\n                        { label: '10 Columns in Row', value: 'box-10x1 ' },\n                        { label: '11 Columns in Row', value: 'box-11x1 ' },\n                    ]}\n                />\n            )}\n        } \n        //==== Block Structure ====//\n        return (\n            <Panel>\n                <PanelBody>\n                    {/*===== Controls ======*/}\n                    <InspectorControls key=\"inspector\">\n                        <PanelBody title={ __('Block Options', 'tornado') }>\n                            {/* //=== Direction Class ===// */}\n                            <SelectControl key=\"container-type\" label=\"Grid Type\" value={attributes.column_type} onChange={ set_column_type }\n                                options={[\n                                    { label: 'Standard Column', value: 'standard' },\n                                    { label: 'Dynamic', value: 'dynamic' },\n                                    { label: 'Masonry', value: 'column' },\n                                ]}\n                            />\n                            {/*=== Custom Class ===*/}\n                            <TextControl key=\"custom-class\" label=\"Custom Class\" value={ attributes.custom_class } onChange={ set_custom_class } />\n                            {/*=== Columns Classes ===*/}\n                            {column_type_options(attributes.column_type)}\n                        </PanelBody>\n                    </InspectorControls>\n                    <div className={'col-block ' + column(attributes.column_type) + attributes.custom_class}>\n                        <InnerBlocks />\n                    </div>\n                </PanelBody>\n            </Panel>\n        );\n    },\n\n    //==== Puplish Mode ====//\n    save: props => {\n        //==== Block Data ====//\n        const { attributes } = props;\n        //=== Column Classes ====//\n        function column (type) {\n            //==== Normal Grid Options ====//\n            if (attributes.column_type === 'column') {\n                return 'column';\n            } else if (attributes.column_type === 'dynamic') {\n                return (attributes.column_dy);\n            } else if (attributes.column_type === 'standard') {\n                return (attributes.column_xs + attributes.column_sm + attributes.column_md + attributes.column_lg + attributes.column_xl)\n            }\n        }\n        //==== Block Structure ====//\n        return (\n            <div className={'col-block ' + column(attributes.column_type)}>\n                <InnerBlocks.Content />\n            </div>\n        );\n    },\n} );"]}