const{__}=wp.i18n;const{registerBlockType}=wp.blocks;const{withInstanceId}=wp.compose;const{PlainText,RichText,Editable,MediaUpload,MediaUploadCheck,AlignmentToolbar,BlockControls,ColorPalette,InnerBlocks,InspectorControls}=wp.blockEditor;const{Draggable,Panel,PanelBody,PanelRow,SelectControl,Button,DropdownMenu,withAPIData,TextControl,RangeControl,FormFileUpload,BaseControl}=wp.components;const ServerSideRender=wp.serverSideRender;const{Component,Fragment}=wp.element;const{select,withSelect,dispatch}=wp.data;const{createHigherOrderComponent}=wp.compose;
registerBlockType("tornado/section",{title:__("Section","tornado"),description:__("Full Width Section Wraper","tornado"),icon:"feedback",category:"tornado",keywords:["tornado","container","grid","section"],supports:{align:["full","wide"]},attributes:{custom_class:{type:"string",default:""},block_id:{type:"string",default:""}},edit:props=>{const{attributes,setAttributes,isSelected}=props;props.setAttributes({align:"full"});const set_custom_class=value=>props.setAttributes({custom_class:value});const set_block_id=value=>setAttributes({block_id:value});return React.createElement(Panel,null,React.createElement(PanelBody,null,React.createElement(InspectorControls,{key:"inspector"},React.createElement(PanelBody,{title:__("Block Options","tornado")},React.createElement(TextControl,{key:"block-id",label:__("CSS ID","tornado"),value:attributes.block_id,onChange:set_block_id}),React.createElement(TextControl,{key:"section-title",label:__("Add CSS Class","tornado"),value:attributes.custom_class,onChange:set_custom_class}))),React.createElement("div",{className:"section-block section "+attributes.custom_class,id:attributes.block_id},React.createElement(InnerBlocks,null))))},save:props=>{const{attributes}=props;return React.createElement("div",{className:"section-block section "+attributes.custom_class,id:attributes.block_id},React.createElement(InnerBlocks.Content,null))}});
registerBlockType("tornado/container",{title:__("Container","tornado"),description:__("Container Block With Title","tornado"),icon:"feedback",category:"tornado",keywords:["tornado","container","grid"],supports:{align:["full","wide"]},attributes:{container_type:{type:"string",default:"container"}},edit:props=>{const{attributes,setAttributes,isSelected}=props;props.setAttributes({align:"full"});const set_container_type=value=>props.setAttributes({container_type:value});return React.createElement(Panel,null,React.createElement(PanelBody,null,React.createElement(InspectorControls,{key:"inspector"},React.createElement(PanelBody,{title:__("Block Options","tornado")},React.createElement(SelectControl,{key:"container-type",label:__("Container Type","tornado"),value:attributes.container_type?attributes.container_type:"",options:[{label:"Default",value:"container"},{label:"xLarge Container",value:"container-xl"},{label:"Full Width Container",value:"container-fluid"}],onChange:set_container_type}))),React.createElement("div",{className:"container-block "+attributes.container_type},React.createElement(InnerBlocks,null))))},save:props=>{const{attributes}=props;return React.createElement("div",{className:"container-block "+attributes.container_type},React.createElement(InnerBlocks.Content,null))}});
registerBlockType("tornado/grid",{title:__("Grid Row","tornado"),description:__("Grid System Row","tornado"),icon:"feedback",category:"tornado",keywords:["tornado","container","grid"],supports:{align:["full","wide"]},attributes:{grid_type:{type:"string",default:"row"},row_direction:{type:"string",default:""},row_gutter:{type:"string",default:""},row_alignment_x:{type:"string",default:""},row_alignment_y:{type:"string",default:""},masonry_xl:{type:"string",default:""},masonry_lg:{type:"string",default:""},masonry_md:{type:"string",default:""},masonry_sm:{type:"string",default:""},masonry_xs:{type:"string",default:""}},edit:props=>{const{attributes,setAttributes,isSelected}=props;props.setAttributes({align:"full"});const set_grid_type=value=>props.setAttributes({grid_type:value});const set_row_direction=value=>props.setAttributes({row_direction:value});const set_row_gutter=value=>props.setAttributes({row_gutter:value});const set_row_alignment_x=value=>props.setAttributes({row_alignment_x:value});const set_row_alignment_y=value=>props.setAttributes({row_alignment_y:value});const set_masonry_xl=value=>props.setAttributes({masonry_xl:value});const set_masonry_lg=value=>props.setAttributes({masonry_lg:value});const set_masonry_md=value=>props.setAttributes({masonry_md:value});const set_masonry_sm=value=>props.setAttributes({masonry_sm:value});const set_masonry_xs=value=>props.setAttributes({masonry_xs:value});function grid_output(type){if(attributes.grid_type==="row"){return"row "+attributes.row_direction+attributes.row_gutter+attributes.row_alignment_x+attributes.row_alignment_y}}function grid_type_options(type){if(attributes.grid_type==="row"){return React.createElement("div",null,React.createElement(SelectControl,{key:"row-direction",label:"Row Direction",value:attributes.row_direction,onChange:set_row_direction,options:[{label:"Default",value:""},{label:"Reverse",value:"row-reverse "}]}),React.createElement(SelectControl,{key:"row-gutter",label:"Row Gutter",value:attributes.row_gutter,onChange:set_row_gutter,options:[{label:"Default",value:""},{label:"No Gutter",value:"no-gutter "},{label:"Small Gutter",value:"gutter-small "},{label:"Medium Gutter",value:"gutter-medium "},{label:"Large Gutter",value:"gutter-large "}]}),React.createElement(SelectControl,{key:"row-align-x",label:"Row Align Horizontally",value:attributes.row_alignment_x,onChange:set_row_alignment_x,options:[{label:"Default",value:""},{label:"Center",value:"align-center-x "},{label:"Direction Start",value:"align-start-x "},{label:"Direction End",value:"align-end-x "},{label:"a Round Columns",value:"align-around "},{label:"Between Columns",value:"align-between "}]}),React.createElement(SelectControl,{key:"row-align-y",label:"Row Align Vertically",value:attributes.row_alignment_y,onChange:set_row_alignment_y,options:[{label:"Default",value:""},{label:"Center",value:"align-center-y "},{label:"Direction Start",value:"align-start-y "},{label:"Direction End",value:"align-end-y "}]}))}if(attributes.grid_type==="masonry"){return React.createElement("div",null,React.createElement(SelectControl,{key:"masonry_xl",label:"xLarge Screens Columns",value:attributes.masonry_xl,onChange:set_masonry_xl,options:[{label:"1 Column in Row",value:"masonry-xl-1x1"},{label:"2 Columns in Row",value:"masonry-xl-2x1"},{label:"3 Columns in Row",value:"masonry-xl-3x1"},{label:"4 Columns in Row",value:"masonry-xl-4x1"},{label:"5 Columns in Row",value:"masonry-xl-5x1"},{label:"6 Columns in Row",value:"masonry-xl-6x1"},{label:"7 Columns in Row",value:"masonry-xl-7x1"},{label:"8 Columns in Row",value:"masonry-xl-8x1"},{label:"9 Columns in Row",value:"masonry-xl-9x1"},{label:"10 Columns in Row",value:"masonry-xl-10x1"},{label:"11 Columns in Row",value:"masonry-xl-11x1"},{label:"12 Columns in Row",value:"masonry-xl-12x1"}]}),React.createElement(SelectControl,{key:"masonry_lg",label:"Large Screens Columns",value:attributes.masonry_lg,onChange:set_masonry_lg,options:[{label:"1 Column in Row",value:"masonry-l-1x1"},{label:"2 Columns in Row",value:"masonry-l-2x1"},{label:"3 Columns in Row",value:"masonry-l-3x1"},{label:"4 Columns in Row",value:"masonry-l-4x1"},{label:"5 Columns in Row",value:"masonry-l-5x1"},{label:"6 Columns in Row",value:"masonry-l-6x1"},{label:"7 Columns in Row",value:"masonry-l-7x1"},{label:"8 Columns in Row",value:"masonry-l-8x1"},{label:"9 Columns in Row",value:"masonry-l-9x1"},{label:"10 Columns in Row",value:"masonry-l-10x1"},{label:"11 Columns in Row",value:"masonry-l-11x1"},{label:"12 Columns in Row",value:"masonry-l-12x1"}]}),React.createElement(SelectControl,{key:"masonry_md",label:"Medium Screens Columns",value:attributes.masonry_md,onChange:set_masonry_md,options:[{label:"1 Column in Row",value:"masonry-m-1x1"},{label:"2 Columns in Row",value:"masonry-m-2x1"},{label:"3 Columns in Row",value:"masonry-m-3x1"},{label:"4 Columns in Row",value:"masonry-m-4x1"},{label:"5 Columns in Row",value:"masonry-m-5x1"},{label:"6 Columns in Row",value:"masonry-m-6x1"},{label:"7 Columns in Row",value:"masonry-m-7x1"},{label:"8 Columns in Row",value:"masonry-m-8x1"},{label:"9 Columns in Row",value:"masonry-m-9x1"},{label:"10 Columns in Row",value:"masonry-m-10x1"},{label:"11 Columns in Row",value:"masonry-m-11x1"},{label:"12 Columns in Row",value:"masonry-m-12x1"}]}),React.createElement(SelectControl,{key:"masonry_sm",label:"Medium Screens Columns",value:attributes.masonry_sm,onChange:set_masonry_sm,options:[{label:"1 Column in Row",value:"masonry-s-1x1"},{label:"2 Columns in Row",value:"masonry-s-2x1"},{label:"3 Columns in Row",value:"masonry-s-3x1"},{label:"4 Columns in Row",value:"masonry-s-4x1"},{label:"5 Columns in Row",value:"masonry-s-5x1"},{label:"6 Columns in Row",value:"masonry-s-6x1"},{label:"7 Columns in Row",value:"masonry-s-7x1"},{label:"8 Columns in Row",value:"masonry-s-8x1"},{label:"9 Columns in Row",value:"masonry-s-9x1"},{label:"10 Columns in Row",value:"masonry-s-10x1"},{label:"11 Columns in Row",value:"masonry-s-11x1"},{label:"12 Columns in Row",value:"masonry-s-12x1"}]}),React.createElement(SelectControl,{key:"masonry_xs",label:"Medium Screens Columns",value:attributes.masonry_xs,onChange:set_masonry_xs,options:[{label:"1 Column in Row",value:"masonry-1x1"},{label:"2 Columns in Row",value:"masonry-2x1"},{label:"3 Columns in Row",value:"masonry-3x1"},{label:"4 Columns in Row",value:"masonry-4x1"},{label:"5 Columns in Row",value:"masonry-5x1"},{label:"6 Columns in Row",value:"masonry-6x1"},{label:"7 Columns in Row",value:"masonry-7x1"},{label:"8 Columns in Row",value:"masonry-8x1"},{label:"9 Columns in Row",value:"masonry-9x1"},{label:"10 Columns in Row",value:"masonry-10x1"},{label:"11 Columns in Row",value:"masonry-11x1"},{label:"12 Columns in Row",value:"masonry-12x1"}]}))}}return React.createElement(Panel,null,React.createElement(PanelBody,null,React.createElement(InspectorControls,{key:"inspector"},React.createElement(PanelBody,{title:__("Block Options","tornado")},React.createElement(SelectControl,{key:"container-type",label:"Grid Type",value:attributes.grid_type,onChange:set_grid_type,options:[{label:"Standard Grid",value:"row"},{label:"Masonry Grid",value:"masonry"}]}),grid_type_options(attributes.grid_type))),React.createElement("div",{className:"grid-block "+grid_output(attributes.grid_type)},React.createElement(InnerBlocks,null))))},save:props=>{const{attributes}=props;function grid_output(type){if(attributes.grid_type==="row"){return"row "+attributes.row_direction+attributes.row_gutter+attributes.row_alignment_x+attributes.row_alignment_y}}return React.createElement("div",{className:"grid-block "+grid_output(attributes.grid_type)},React.createElement(InnerBlocks.Content,null))}});
registerBlockType("tornado/grid-column",{title:__("Grid Column","tornado"),description:__("Grid System Row Column","tornado"),icon:"feedback",category:"tornado",keywords:["tornado","container","grid"],supports:{align:["full","wide"]},attributes:{column_type:{type:"string",default:"standrd"},custom_class:{type:"string",default:""},column_xl:{type:"string",default:""},column_lg:{type:"string",default:""},column_md:{type:"string",default:""},column_sm:{type:"string",default:""},column_xs:{type:"string",default:""},column_dy:{type:"string",default:""}},edit:props=>{const{attributes,setAttributes,isSelected}=props;props.setAttributes({align:"full"});const set_column_type=value=>props.setAttributes({column_type:value});const set_custom_class=value=>props.setAttributes({custom_class:value});const set_column_xl=value=>props.setAttributes({column_xl:value});const set_column_lg=value=>props.setAttributes({column_lg:value});const set_column_md=value=>props.setAttributes({column_md:value});const set_column_sm=value=>props.setAttributes({column_sm:value});const set_column_xs=value=>props.setAttributes({column_xs:value});const set_column_dy=value=>props.setAttributes({column_dy:value});function column(type){if(attributes.column_type==="column"){return"column"}else if(attributes.column_type==="dynamic"){return attributes.column_dy}else if(attributes.column_type==="standard"){return attributes.column_xs+attributes.column_sm+attributes.column_md+attributes.column_lg+attributes.column_xl}}function column_type_options(type){if(attributes.column_type==="standard"){return React.createElement("div",null,React.createElement(SelectControl,{key:"column_xl",label:"xLarge Screens Columns",value:attributes.column_xl,onChange:set_column_xl,options:[{label:"1/12 Column",value:"col-xl-1 "},{label:"2/12 Column",value:"col-xl-2 "},{label:"3/12 Column",value:"col-xl-3 "},{label:"4/12 Column",value:"col-xl-4 "},{label:"5/12 Column",value:"col-xl-5 "},{label:"6/12 Column",value:"col-xl-6 "},{label:"7/12 Column",value:"col-xl-7 "},{label:"8/12 Column",value:"col-xl-8 "},{label:"9/12 Column",value:"col-xl-9 "},{label:"10/12 Column",value:"col-xl-10 "},{label:"11/12 Column",value:"col-xl-11 "},{label:"12/12 Column",value:"col-xl-12 "}]}),React.createElement(SelectControl,{key:"column_lg",label:"Large Screens Columns",value:attributes.column_lg,onChange:set_column_lg,options:[{label:"1/12 Column",value:"col-l-1 "},{label:"2/12 Column",value:"col-l-2 "},{label:"3/12 Column",value:"col-l-3 "},{label:"4/12 Column",value:"col-l-4 "},{label:"5/12 Column",value:"col-l-5 "},{label:"6/12 Column",value:"col-l-6 "},{label:"7/12 Column",value:"col-l-7 "},{label:"8/12 Column",value:"col-l-8 "},{label:"9/12 Column",value:"col-l-9 "},{label:"10/12 Column",value:"col-l-10 "},{label:"11/12 Column",value:"col-l-11 "},{label:"12/12 Column",value:"col-l-12 "}]}),React.createElement(SelectControl,{key:"column_md",label:"Medium Screens Columns",value:attributes.column_md,onChange:set_column_md,options:[{label:"1/12 Column",value:"col-m-1 "},{label:"2/12 Column",value:"col-m-2 "},{label:"3/12 Column",value:"col-m-3 "},{label:"4/12 Column",value:"col-m-4 "},{label:"5/12 Column",value:"col-m-5 "},{label:"6/12 Column",value:"col-m-6 "},{label:"7/12 Column",value:"col-m-7 "},{label:"8/12 Column",value:"col-m-8 "},{label:"9/12 Column",value:"col-m-9 "},{label:"10/12 Column",value:"col-m-10 "},{label:"11/12 Column",value:"col-m-11 "},{label:"12/12 Column",value:"col-m-12 "}]}),React.createElement(SelectControl,{key:"column_sm",label:"Small Screens",value:attributes.column_sm,onChange:set_column_sm,options:[{label:"1/12 Column",value:"col-s-1 "},{label:"2/12 Column",value:"col-s-2 "},{label:"3/12 Column",value:"col-s-3 "},{label:"4/12 Column",value:"col-s-4 "},{label:"5/12 Column",value:"col-s-5 "},{label:"6/12 Column",value:"col-s-6 "},{label:"7/12 Column",value:"col-s-7 "},{label:"8/12 Column",value:"col-s-8 "},{label:"9/12 Column",value:"col-s-9 "},{label:"10/12 Column",value:"col-s-10 "},{label:"11/12 Column",value:"col-s-11 "},{label:"12/12 Column",value:"col-s-12 "}]}),React.createElement(SelectControl,{key:"column_xs",label:"Extra Small Screens",value:attributes.column_xs,onChange:set_column_xs,options:[{label:"1/12 Column",value:"col-1 "},{label:"2/12 Column",value:"col-2 "},{label:"3/12 Column",value:"col-3 "},{label:"4/12 Column",value:"col-4 "},{label:"5/12 Column",value:"col-5 "},{label:"6/12 Column",value:"col-6 "},{label:"7/12 Column",value:"col-7 "},{label:"8/12 Column",value:"col-8 "},{label:"9/12 Column",value:"col-9 "},{label:"10/12 Column",value:"col-10 "},{label:"11/12 Column",value:"col-11 "},{label:"12/12 Column",value:"col-12 "}]}))}if(attributes.column_type==="dynamic"){return React.createElement(SelectControl,{key:"column_dy",label:"Columns in Each Row",value:attributes.column_dy,onChange:set_column_dy,options:[{label:"5 Columns in Row",value:"box-5x1 "},{label:"7 Columns in Row",value:"box-7x1 "},{label:"8 Columns in Row",value:"box-8x1 "},{label:"9 Columns in Row",value:"box-9x1 "},{label:"10 Columns in Row",value:"box-10x1 "},{label:"11 Columns in Row",value:"box-11x1 "}]})}}return React.createElement(Panel,null,React.createElement(PanelBody,null,React.createElement(InspectorControls,{key:"inspector"},React.createElement(PanelBody,{title:__("Block Options","tornado")},React.createElement(SelectControl,{key:"container-type",label:"Grid Type",value:attributes.column_type,onChange:set_column_type,options:[{label:"Standard Column",value:"standard"},{label:"Dynamic",value:"dynamic"},{label:"Masonry",value:"column"}]}),React.createElement(TextControl,{key:"custom-class",label:"Custom Class",value:attributes.custom_class,onChange:set_custom_class}),column_type_options(attributes.column_type))),React.createElement("div",{className:"col-block "+column(attributes.column_type)+attributes.custom_class},React.createElement(InnerBlocks,null))))},save:props=>{const{attributes}=props;function column(type){if(attributes.column_type==="column"){return"column"}else if(attributes.column_type==="dynamic"){return attributes.column_dy}else if(attributes.column_type==="standard"){return attributes.column_xs+attributes.column_sm+attributes.column_md+attributes.column_lg+attributes.column_xl}}return React.createElement("div",{className:"col-block "+column(attributes.column_type)},React.createElement(InnerBlocks.Content,null))}});

//# sourceMappingURL=blocks.min.js.map